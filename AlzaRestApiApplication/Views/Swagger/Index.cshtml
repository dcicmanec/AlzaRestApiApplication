@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    ViewBag.Title = "Swagger documentation";
}
<style type="text/css">
    body {
        font-family: Trebuchet MS, sans-serif;
        font-size: 15px;
        color: #444;
        margin-right: 24px;
    }

    h1 {
        font-size: 25px;
    }

    h2 {
        font-size: 20px;
    }

    h3 {
        font-size: 16px;
        font-weight: bold;
    }

    hr {
        height: 1px;
        border: 0;
        color: #ddd;
        background-color: #ddd;
    }

    .app-desc {
        clear: both;
        margin-left: 20px;
    }

    .param-name {
        width: 100%;
    }

    .license-info {
        margin-left: 20px;
    }

    .license-url {
        margin-left: 20px;
    }

    .model {
        margin: 0 0 0px 20px;
    }

    .method {
        margin-left: 20px;
    }

    .method-notes {
        margin: 10px 0 20px 0;
        font-size: 90%;
        color: #555;
    }

    pre {
        padding: 10px;
        margin-bottom: 2px;
    }

    .http-method {
        text-transform: uppercase;
    }

    pre.get {
        background-color: #0f6ab4;
    }

    pre.post {
        background-color: #10a54a;
    }

    pre.put {
        background-color: #c5862b;
    }

    pre.delete {
        background-color: #a41e22;
    }

    .huge {
        color: #fff;
    }

    pre.example {
        background-color: #f3f3f3;
        padding: 10px;
        border: 1px solid #ddd;
    }

    code {
        white-space: pre;
    }

    .nickname {
        font-weight: bold;
    }

    .method-path {
        font-size: 1.5em;
        background-color: #0f6ab4;
    }

    .up {
        float: right;
    }

    .parameter {
        width: 500px;
    }

    .param {
        width: 500px;
        padding: 10px 0 0 20px;
        font-weight: bold;
    }

    .param-desc {
        width: 700px;
        padding: 0 0 0 20px;
        color: #777;
    }

    .param-type {
        font-style: italic;
    }

    .param-enum-header {
        width: 700px;
        padding: 0 0 0 60px;
        color: #777;
        font-weight: bold;
    }

    .param-enum {
        width: 700px;
        padding: 0 0 0 80px;
        color: #777;
        font-style: italic;
    }

    .field-label {
        padding: 0;
        margin: 0;
        clear: both;
    }

    .field-items {
        padding: 0 0 15px 0;
        margin-bottom: 15px;
    }

    .return-type {
        clear: both;
        padding-bottom: 10px;
    }

    .param-header {
        font-weight: bold;
    }

    .method-tags {
        text-align: right;
    }

    .method-tag {
        background: none repeat scroll 0% 0% #24A600;
        border-radius: 3px;
        padding: 2px 10px;
        margin: 2px;
        color: #FFF;
        display: inline-block;
        text-decoration: none;
    }
</style>
<h2>Swagger documentation</h2>

<h1>AlzaRestApiApplication</h1>
<div class="app-desc">This is a simple REST API Documentation for AlzaRestApiApplication</div>
<div class="app-desc">More information: <a href="https://app.swaggerhub.com/apis-docs/test62993/AlzaRestApi/1.0.0#/">https://app.swaggerhub.com/apis-docs/test62993/AlzaRestApi/1.0.0#/</a></div>
<div class="app-desc">Contact Info: <a href="cicmanec.dusan@gmail.com">cicmanec.dusan@gmail.com</a></div>
<div class="app-desc">Version: 1.0.0</div>
<div class="app-desc">BasePath:/api/ShoppingItems/</div>
<div class="license-info">Apache 2.0</div>
<div class="license-url">http://www.apache.org/licenses/LICENSE-2.0.html</div>
<h2>Access</h2>

<h2><a name="__Methods">Methods</a></h2>
  [ Jump to <a href="#__Models">Models</a> ]

<h3>Table of Contents </h3>
<div class="method-summary"></div>
<h4><a href="#Developers">Developers</a></h4>
<ul>
    <li><a href="#getShoppingListGet"><code><span class="http-method">get</span> /GetShoppingList</code></a></li>
    <li><a href="#getShoppingListInfoByIdGet"><code><span class="http-method">get</span> /GetShoppingListInfoById</code></a></li>
    <li><a href="#updateShoppingItemInfoPost"><code><span class="http-method">post</span> /UpdateShoppingItemInfo</code></a></li>
</ul>

<h1><a name="Developers">Developers</a></h1>
<div class="method">
    <a name="getShoppingListGet" />
    <div class="method-path">
        <a class="up" href="#__Methods">Up</a>
        <pre class="get"><code class="huge"><span class="http-method">get</span> /GetShoppingList</code></pre>
    </div>
    <div class="method-summary">displays all shopping list items (<span class="nickname">getShoppingListGet</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
        <div class="param">pageNumber (optional)</div>

        <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; number of actual page for pagination (0 for all records on page) format: int32</div><div class="param">pageSize (optional)</div>

        <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; number of records on one page for pagination format: int32</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
        array[<a href="#Paging">Paging</a>]

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>
    [
        {
            "pageNumber": 1,
            "pageSize": 10
        }
    ]
</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
        <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    shopping items results matching criteria

    <h4 class="field-label">400</h4>
    bad input parameter
    <a href="#"></a>
</div> <!-- method -->
<hr />
<div class="method">
    <a name="getShoppingListInfoByIdGet" />
    <div class="method-path">
        <a class="up" href="#__Methods">Up</a>
        <pre class="get"><code class="huge"><span class="http-method">get</span> /GetShoppingListInfoById</code></pre>
    </div>
    <div class="method-summary">return shopping item by ID (<span class="nickname">getShoppingListInfoByIdGet</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
        <div class="param">ShoppingListId (required)</div>

        <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; ID of shopping item in the list format: int64</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
        array[<a href="#ShoppingListId">ShoppingListId</a>]

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>
    [
        {
            "ShoppingListId": 1
        }
    ]
</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
        <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    shopping items ID matching criteria

    <h4 class="field-label">400</h4>
    bad input parameter
    <a href="#"></a>
</div> <!-- method -->
<hr />
<div class="method">
    <a name="updateShoppingItemInfoPost" />
    <div class="method-path">
        <a class="up" href="#__Methods">Up</a>
        <pre class="post"><code class="huge"><span class="http-method">post</span> /UpdateShoppingItemInfo</code></pre>
    </div>
    <div class="method-summary">update shopping item data (<span class="nickname">updateShoppingItemInfoPost</span>)</div>
    <div class="method-notes"></div>





    <h3 class="field-label">Query parameters</h3>
    <div class="field-items">
        <div class="param">ID (required)</div>

        <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; ID of shopping item to update format: int64</div><div class="param">Name (required)</div>

        <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Name of shopping item to update format: string</div><div class="param">ImgUri (required)</div>

        <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Image URL adress format: string</div><div class="param">Price (required)</div>

        <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Shopping item price in Eur format: decimal</div><div class="param">Description (optional)</div>

        <div class="param-desc"><span class="param-type">Query Parameter</span> &mdash; Shopping item description format: string</div>
    </div>  <!-- field-items -->


    <h3 class="field-label">Return type</h3>
    <div class="return-type">
        array[<a href="#UpdateShoppingItemInfo">UpdateShoppingItemInfo</a>]

    </div>

    <!--Todo: process Response Object and its headers, schema, examples -->

    <h3 class="field-label">Example data</h3>
    <div class="example-data-content-type">Content-Type: application/json</div>
    <pre class="example"><code>{}</code></pre>

    <h3 class="field-label">Produces</h3>
    This API call produces the following media types according to the <span class="header">Accept</span> request header;
    the media type will be conveyed by the <span class="header">Content-Type</span> response header.
    <ul>
        <li><code>application/json</code></li>
    </ul>

    <h3 class="field-label">Responses</h3>
    <h4 class="field-label">200</h4>
    Record Updated Successfully!!

    <h4 class="field-label">400</h4>
    Record does not Exists!!
    <a href="#"></a>
</div> <!-- method -->
<hr />

<h2><a name="__Models">Models</a></h2>
  [ Jump to <a href="#__Methods">Methods</a> ]

<h3>Table of Contents</h3>
<ol>
    <li><a href="#Paging"><code>Paging</code> - </a></li>
    <li><a href="#ShoppingListId"><code>ShoppingListId</code> - </a></li>
    <li><a href="#UpdateShoppingItemInfo"><code>UpdateShoppingItemInfo</code> - </a></li>
</ol>

<div class="model">
    <h3><a name="Paging"><code>Paging</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
        <div class="param">pageNumber </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  format: int32</div>
        <div class="param-desc"><span class="param-type">example: 1</span></div>
        <div class="param">pageSize </div><div class="param-desc"><span class="param-type"><a href="#integer">Integer</a></span>  </div>
        <div class="param-desc"><span class="param-type">example: 10</span></div>
    </div>  <!-- field-items -->
</div>
<div class="model">
    <h3><a name="ShoppingListId"><code>ShoppingListId</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
        <div class="param">ShoppingListId </div><div class="param-desc"><span class="param-type"><a href="#long">Long</a></span>  format: int64</div>
        <div class="param-desc"><span class="param-type">example: 1</span></div>
    </div>  <!-- field-items -->
</div>
<div class="model">
    <h3><a name="UpdateShoppingItemInfo"><code>UpdateShoppingItemInfo</code> - </a> <a class="up" href="#__Models">Up</a></h3>
    <div class='model-description'></div>
    <div class="field-items">
    </div>  <!-- field-items -->
</div>


